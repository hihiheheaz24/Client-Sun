/*
 * Generated by BeChicken
 * on 11/14/2019
 * version v1.0
 */
(function () {
    cc.BauCuaGraphInGameView = cc.Class({
        extends: cc.Component,
        properties: {
            lbTotalDeer: cc.Label,//Huou
            lbTotalGourd: cc.Label,//Bau
            lbTotalRooster: cc.Label,//Ga
            lbTotalFish: cc.Label,//Ca
            lbTotalCrab: cc.Label,//Cua
            lbTotalLobster: cc.Label,//Tom

            animation: cc.Animation,

            itemDices: cc.Node,
            layoutDices: cc.Node,
            sprDice1: cc.Sprite,
            sprDice2: cc.Sprite,
            sprDice3: cc.Sprite,
        },

        onLoad: function () {
            
        },
        resetList: function () {
            try {
                this.lbTotalDeer.string = 0;
                this.lbTotalGourd.string = 0;
                this.lbTotalRooster.string = 0;
                this.lbTotalFish.string = 0;
                this.lbTotalCrab.string = 0;
                this.lbTotalLobster.string = 0;
            } catch (e) {

            }
        },
        getData: function () {
            this.resetList();

            var self = this;
            var delay = 0.2;
            cc.director.getScheduler().schedule(function () {
                self.getSoiCau();
            }, this, 1, 0, delay, false);

            this.totalDeer = 0;//Huou
            this.totalGourd = 0;//Bau
            this.totalRooster = 0;//Ga
            this.totalFish = 0;//Ca
            this.totalCrab = 0;//Cua
            this.totalLobster = 0; //Tom
        },

        getSoiCau: function () {
            var command = new cc.BauCuaSoiCauCommand;
            command.execute(this)
        },
        onResponse: function (list) {
            if (list) {
                //Tinh tong
                this.layoutDices.removeAllChildren();
                list.map((item, index) => {
                    this.calcSumDice(item.FirstDice);
                    this.calcSumDice(item.SecondDice);
                    this.calcSumDice(item.ThirdDice);

                    if (index == 0) {
                        this.sprDice1.spriteFrame = cc.BauCuaController.getInstance().getSfDiceHistory(parseInt(item.FirstDice) - 1);
                        this.sprDice2.spriteFrame = cc.BauCuaController.getInstance().getSfDiceHistory(parseInt(item.SecondDice) - 1);
                        this.sprDice3.spriteFrame = cc.BauCuaController.getInstance().getSfDiceHistory(parseInt(item.ThirdDice) - 1);
                    } else {
                        let itemS = cc.instantiate(this.itemDices);
                        this.layoutDices.addChild(itemS);
                        itemS.getComponent(cc.BauCuaGraphItem).setResultDice(item, index);
                    }
                }, this);
                //Hien thi tong tung cua
                this.lbTotalDeer.string = this.totalDeer;
                this.lbTotalGourd.string = this.totalGourd;
                this.lbTotalRooster.string = this.totalRooster;
                this.lbTotalFish.string = this.totalFish;
                this.lbTotalCrab.string = this.totalCrab;
                this.lbTotalLobster.string = this.totalLobster;
            }
        },
        //Tinh tong xuat hien tung cua bet
        calcSumDice: function (side) {
            side = parseInt(side);
            switch (side) {
                case cc.BauCuaBetSide.Deer://Huou
                    this.totalDeer += 1;
                    break;
                case cc.BauCuaBetSide.Gourd://Bau
                    this.totalGourd += 1;
                    break;
                case cc.BauCuaBetSide.Rooster://Ga
                    this.totalRooster += 1;
                    break;
                case cc.BauCuaBetSide.Fish://Ca
                    this.totalFish += 1;
                    break;
                case cc.BauCuaBetSide.Crab://Cua
                    this.totalCrab += 1;
                    break;
                case cc.BauCuaBetSide.Lobster://Tom
                    this.totalLobster += 1;
                    break;
            }
        },

        openClicked: function () {
            this.animation.play('openHistory');
            this.getData();
        },

        closeClicked: function () {
            this.resetList();
            this.animation.play('closeHistory');
        },
    })
}).call(this)