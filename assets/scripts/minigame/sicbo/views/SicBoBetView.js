/*
 * Generated by BeChicken
 * on 11/13/2019
 * version v1.0
 */
(function () {
    cc.SicBoBetView = cc.Class({
        extends: cc.Component,
        properties: {
            popupView:cc.SicBoPopUpNewView,
            xWinParticle:cc.Prefab,
            xWinListText:[cc.SpriteFrame],
            xWinBigWin:cc.Node,
            MatMot: cc.Node,
            MatHai: cc.Node,
            MatBa: cc.Node,
            MatBon: cc.Node,
            MatNam: cc.Node,
            MatSau: cc.Node,
            CuaTai: cc.Node,
            CuaXiu: cc.Node,
            CuaChan: cc.Node,
            CuaLe: cc.Node,
            MatMotHai: cc.Node,
            MatMotBa: cc.Node,
            MatMotBon: cc.Node,
            MatMotNam: cc.Node,
            MatMotSau: cc.Node,
            MatHaiBa: cc.Node,
            MatHaiBon: cc.Node,
            MatHaiNam: cc.Node,
            MatHaiSau: cc.Node,
            MatBaBon: cc.Node,
            MatBaNam: cc.Node,
            MatBaSau: cc.Node,
            MatBonNam: cc.Node,
            MatBonSau: cc.Node,
            MatNamSau: cc.Node,
            TongBon: cc.Node,
            TongNam: cc.Node,
            TongSau: cc.Node,
            TongBay: cc.Node,
            TongTam: cc.Node,
            TongChin: cc.Node,
            TongMuoi: cc.Node,
            TongMuoiMot: cc.Node,
            TongMuoiHai: cc.Node,
            TongMuoiBa: cc.Node,
            TongMuoiBon: cc.Node,
            TongMuoiNam: cc.Node,
            TongMuoiSau: cc.Node,
            TongMuoiBay: cc.Node,
            MatMotMot: cc.Node,
            MatHaiHai: cc.Node,
            MatBaBa: cc.Node,
            MatBonBon: cc.Node,
            MatNamNam: cc.Node,
            MatSauSau: cc.Node,
            MatMotMotMot: cc.Node,
            MatHaiHaiHai: cc.Node,
            MatBaBaBa: cc.Node,
            MatBonBonBon: cc.Node,
            MatNamNamNam: cc.Node,
            MatSauSauSau: cc.Node,
            BaoBatKy: cc.Node,

            //Total bet groups
            TotalBets: [cc.Node],

            //ButtonBet
            btnChipBet:[cc.Node],
            scrollView: cc.ScrollView,

            //Btn Bet again
            nodeBetX2: cc.Node,
            nodeBetAgain: cc.Node,

            spriteBtnNan: cc.Sprite

        },
        onLoad: function () {
            this.controller = cc.SicBoController.getInstance();
            this.controller.setBetView(this);
            this.xWinParticleTemp = cc.instantiate(this.xWinParticle);
            this.scrollBetBtnPercent = 0;
            this.betValue = 5000;//Khoi tao bet value 5k
            this.listNodeSide = [
                this.MatMot,
                this.MatHai,
                this.MatBa,
                this.MatBon,
                this.MatNam,
                this.MatSau,
                this.CuaTai,
                this.CuaXiu,
                this.CuaChan,
                this.CuaLe,
                this.MatMotHai,
                this.MatMotBa,
                this.MatMotBon,
                this.MatMotNam,
                this.MatMotSau,
                this.MatHaiBa,
                this.MatHaiBon,
                this.MatHaiNam,
                this.MatHaiSau,
                this.MatBaBon,
                this.MatBaNam,
                this.MatBaSau,
                this.MatBonNam,
                this.MatBonSau,
                this.MatNamSau,
                this.TongBon,
                this.TongNam,
                this.TongSau,
                this.TongBay,
                this.TongTam,
                this.TongChin,
                this.TongMuoi,
                this.TongMuoiMot,
                this.TongMuoiHai,
                this.TongMuoiBa,
                this.TongMuoiBon,
                this.TongMuoiNam,
                this.TongMuoiSau,
                this.TongMuoiBay,
                this.MatMotMot,
                this.MatHaiHai,
                this.MatBaBa,
                this.MatBonBon,
                this.MatNamNam,
                this.MatSauSau,
                this.MatMotMotMot,
                this.MatHaiHaiHai,
                this.MatBaBaBa,
                this.MatBonBonBon,
                this.MatNamNamNam,
                this.MatSauSauSau,
                this.BaoBatKy
            ];
            //An animWin
            //Btn Bet
            this.btnBetX2 = this.nodeBetX2.getComponent(cc.Button);
            this.btnBetAgain = this.nodeBetAgain.getComponent(cc.Button);
            this.stopAnimationWin();

            this.controller.setIsNan(false);

            this.lstBtnBet = this.getListBtnBet([
                this.MatMot,
                this.MatHai,
                this.MatBa,
                this.MatBon,
                this.MatNam,
                this.MatSau,
                this.CuaTai,
                this.CuaXiu,
                this.CuaChan,
                this.CuaLe,
                this.MatMotHai,
                this.MatMotBa,
                this.MatMotBon,
                this.MatMotNam,
                this.MatMotSau,
                this.MatHaiBa,
                this.MatHaiBon,
                this.MatHaiNam,
                this.MatHaiSau,
                this.MatBaBon,
                this.MatBaNam,
                this.MatBaSau,
                this.MatBonNam,
                this.MatBonSau,
                this.MatNamSau,
                this.TongBon,
                this.TongNam,
                this.TongSau,
                this.TongBay,
                this.TongTam,
                this.TongChin,
                this.TongMuoi,
                this.TongMuoiMot,
                this.TongMuoiHai,
                this.TongMuoiBa,
                this.TongMuoiBon,
                this.TongMuoiNam,
                this.TongMuoiSau,
                this.TongMuoiBay,
                this.MatMotMot,
                this.MatHaiHai,
                this.MatBaBa,
                this.MatBonBon,
                this.MatNamNam,
                this.MatSauSau,
                this.MatMotMotMot,
                this.MatHaiHaiHai,
                this.MatBaBaBa,
                this.MatBonBonBon,
                this.MatNamNamNam,
                this.MatSauSauSau,
                this.BaoBatKy
            ]);
            this.enableClickBet(false);

            this.setSpriteBtnNan();
        },
        getListBtnBet: function (arrNode) {
            let listBtn = [];
            arrNode.map(node => listBtn.push(node.getChildByName('btnBet').getComponent(cc.Button)));
            return listBtn;
        },

        //Hien thi side thang
        activeNodeWin: function (node, isActive) {
            let nodeWin = node.getChildByName('win');
            nodeWin.active = isActive;
        },
        activeXWin: function (node, isActive, val,sideWin) {
            let winEffect = node.getChildByName('win');
            winEffect.active = false;
            let nodeWinBG = node.getChildByName('thiemthu');
            let nodeXWin = nodeWinBG.getChildByName('xWin');
            let strAnim = 'x2';
            nodeXWin.getComponent(cc.Sprite).spriteFrame = this.xWinListText[0];
            if(val==2){
                strAnim = 'x5';
                nodeXWin.getComponent(cc.Sprite).spriteFrame = this.xWinListText[1];

            } else if(val==3){
                strAnim = 'x10';
                nodeXWin.getComponent(cc.Sprite).spriteFrame = this.xWinListText[2];

            } else if(val==4){
                strAnim = 'x88';
                nodeXWin.getComponent(cc.Sprite).spriteFrame = this.xWinListText[3];
            }
            if(isActive){
                cc.director.getScheduler().schedule(function () {
                    this.xWinBigWin.active = true;
                    this.xWinBigWin.getChildByName('Bg').getComponent(sp.Skeleton).clearTracks();
                    this.xWinBigWin.getChildByName('Bg').getComponent(sp.Skeleton).setToSetupPose();
                    this.xWinBigWin.getChildByName('Bg').getComponent(sp.Skeleton).setAnimation(0,'TCL_Appear',false);
                    this.xWinBigWin.getChildByName('Bg').getComponent(sp.Skeleton).addAnimation(0,'TCL_Idle',true);
                    this.xWinBigWin.getChildByName('Content').getComponent(sp.Skeleton).clearTracks();
                    this.xWinBigWin.getChildByName('Content').getComponent(sp.Skeleton).setToSetupPose();
                    this.xWinBigWin.getChildByName('Content').getComponent(sp.Skeleton).setSkin(strAnim);
                    this.xWinBigWin.getChildByName('Content').getComponent(sp.Skeleton).setAnimation(0,'appear',false);
                    this.xWinBigWin.getChildByName('Content').getComponent(sp.Skeleton).addAnimation(0,'idle',true);
                }.bind(this), this, 0, 0, 2, false);
                this.controller.pushCoinThiemThu(sideWin);
                cc.director.getScheduler().schedule(function () {
                    nodeWinBG.active = isActive;
                    this.xWinParticleTemp.parent = nodeWinBG;
                    this.xWinParticleTemp.position = cc.v2(0,0)
                    this.xWinParticleTemp.setSiblingIndex(0);
                    let anim =  nodeWinBG.getComponent(sp.Skeleton);
                    anim.clearTracks();
                    anim.setToSetupPose();
                    anim.setSkin(strAnim);
                    let animInfo= this.getAnimationThiemThuInfo(sideWin);
                    anim.setAnimation(animInfo.appear,animInfo.appearName,false);
                    cc.director.getScheduler().schedule(function () {
                        anim.clearTracks();
                        anim.setToSetupPose();
                        anim.setAnimation(animInfo.loop,animInfo.loopName,true);
                    }.bind(this), this, 0, 0, 1, false);
                }.bind(this), this, 0, 0, 5, false);
            }
            else
            {
                nodeWinBG.active = false;
                this.xWinBigWin.active = false;
            }
        },
        getAnimationThiemThuInfo:function(betSide)
        {
            var item = {};
            if (betSide<7) {
                item.loop = 25;
                item.appear = 6;
                item.appearName = '7';
                item.loopName = '7_idle';
                return item;
            }
            if (betSide>10&&betSide<26) {
                item.loop = 22;
                item.appear = 5;
                item.appearName = '6';
                item.loopName = '6_idle';
                return item;
            }
            if (betSide>25&&betSide<40) {
                item.loop = 19;
                item.appear = 4;
                item.appearName = '5';
                item.loopName = '5_idle';
                return item;
            }
            if (betSide>39&&betSide<46) {
                item.loop = 16;
                item.appear = 3;
                item.appearName = '4';
                item.loopName = '4_idle';
                return item;
            }
            if (betSide>45&&betSide<52) {
                item.loop = 10;
                item.appear = 1;
                item.appearName = '2';
                item.loopName = '2_idle';
                return item;
            }
            if (betSide>8&&betSide<11) {
                item.loop = 13;
                item.appear = 2;
                item.appearName = '3';
                item.loopName = '3_idle';
                return item;
            }
            if (betSide>6&&betSide<9) {
                item.loop = 1;
                item.appear = 0;
                item.appearName = 'animation';
                item.loopName = 'idle';
                return item;
            }
            if (betSide==52) {
                item.loop = 7;
                item.appear = 0;
                item.appearName = '1';
                item.loopName = '1_idle';
                return item;
            }
        },
        activeCurrentPlayerWin: function(node, isActive, val){
            let nodeWin = node.getChildByName('result-banner-bg');
            nodeWin.active = true;
            if(isActive){
                nodeWin.getChildByName('str').getComponent(cc.Label).string = "+"+cc.Tool.getInstance().formatNumberSicbo(val);
                nodeWin.getComponent(cc.Animation).play('fadeIn');
            } else {
                nodeWin.getComponent(cc.Animation).play('fadeOut');
            }
            nodeWin.active = isActive;
        },
        //Reset label bet
        resetLbTotalBet: function () {
            for(let i=0;i<this.TotalBets.length;i++){
                let group = this.TotalBets[i];
                group.getChildByName('total_bet_bg').active = false;
                group.getChildByName('total_bet_bg').getChildByName('lbTotalBet').getComponent(cc.Label).string = "";
                group.getChildByName('lbTotalUserBet').getComponent(cc.Label).string = "";
            }
        },
        enableClickBet: function (isEnable) {
            this.disableBetAgain(!isEnable);
            this.disableBetX2(!isEnable);
            this.lstBtnBet.map(btn => {
                btn.interactable = isEnable;
            });
        },
        onEnable: function () {
        },
        onDisable: function () {
        },
        //Set gia tri bet
        setBetValue: function (sender, value) {
            value = parseInt(value);
            if (value != this.betValue) {
                this.betValue = value;
                cc.AudioController.getInstance().playSound(cc.AudioTypes.CHIP_SELECT);
                //Doi active chip
                this.resetSpriteButton();
                //Active button
                this.setActiveButton(sender.target);
            }
        },
        setActiveButton: function (node) {
            node.getChildByName('active').active = true;
            let moveUp = cc.moveTo(0.3, cc.v2(node.x, 10));
            node.runAction(moveUp);
        },
        resetSpriteButton: function () {
        
            let self = this;
            this.btnChipBet.forEach(function (btn, index) {
                self.setDefaultSfButton(btn, index);
            });

        },
        setDefaultSfButton: function (node, type) {
            node.getChildByName('active').active = false;
            let moveBack = cc.moveTo(0.3, cc.v2(node.x, 0));
            node.runAction(moveBack);
        },
        //Bet lai
        onBetAgain: function () {
            let logBet = this.controller.getBetLogBySessionID(this.controller.getBetLogSession()-1);
            if (logBet.length === 0) {
                this.popupView.showMessage("Chưa có dữ liệu phiên trước.");
                return;
            }

            let currLog = this.getLogBetInfo(1,1);
            currLog.map((betData, index) => {
                let timeOut = setTimeout(function () {
                    if (this.controller.getCurrentState() === cc.SicBoPharse.Betting && betData.sessionID === this.controller.getBetLogSession() - 1) {
                        this.sendRequestBet(betData.value, betData.betSide);
                    } else {
                        try {
                            clearTimeout(timeOut);
                        } catch (e) {
                            console.log(e);
                        }
                    }
                }.bind(this), index * 100);
            }, this);
            //}
            this.disableBetAgain(true);
        },
        onBetX2: function () {
            let logBet = this.controller.getBetLogBySessionID(this.controller.getBetLogSession());
            if (logBet.length === 0) {
                this.popupView.showMessage("Vui lòng đặt cửa trước!");
                return;
            }

            let currLog = this.getLogBetInfo(1,0);


            //for (let i = 1; i <= unit; i++) {
            currLog.map((betData, index) => {
                let timeOut = setTimeout(function () {
                    if (this.controller.getCurrentState() === cc.SicBoPharse.Betting && betData.sessionID === this.controller.getBetLogSession()) {
                        this.sendRequestBet(betData.value, betData.betSide);
                    } else {
                        try {
                            clearTimeout(timeOut);
                        } catch (e) {
                            console.log(e);
                        }
                    }
                }.bind(this), index * 100);
            }, this);
        },
        onLeftButtonClicked: function () {
            this.scrollBetBtnPercent-=0.2;
            this.scrollBetBtnPercent = this.scrollBetBtnPercent<0?0:this.scrollBetBtnPercent;
            this.scrollView.scrollToPercentHorizontal(this.scrollBetBtnPercent,0.3);
        },
        onRightButtonClicked: function () {
            this.scrollBetBtnPercent+=0.2;
            this.scrollBetBtnPercent = this.scrollBetBtnPercent>1?1:this.scrollBetBtnPercent;
            this.scrollView.scrollToPercentHorizontal(this.scrollBetBtnPercent,0.3);
        },
        //Lay thong tin lich su bet
        getLogBetInfo: function (unit,offset) {
            
            let logBet = this.controller.getBetLogBySessionID(this.controller.getBetLogSession()-offset);
            let listSide = Object.values(cc.SicBoBetSide);
            let dataLogSide = [];

            //Map thong tin log bet cac cua bet
            if (logBet.length > 0) {
                listSide.map(side => {
                    dataLogSide[side] = logBet.filter(betData => betData.betSide == side);
                }, this);
            }

            //Tinh toan chip tung cua bet
            let finalLog = [];

            //Test Total
            dataLogSide.map((logSide) => {
                if (logSide.length > 0) {
                    let bet = this.calcLogBet(logSide, unit);
                    finalLog.push(...bet);
                }
            }, this);
            return finalLog;
        },
        //Tinh tong tien bet cua tung cua
        getTotalMoneyBetSide: function (logsBetSide, unit) {
            let totalMoney = 0;
            logsBetSide.map(betData => {
                totalMoney += parseInt(betData.value);
            }, this);
            return totalMoney * unit;
        },
        //Tinh toan luot bet
        calcLogBet: function (logsBetSide, unit) {

            let listChip = [50000000,10000000,5000000,1000000, 500000, 100000,50000, 10000, 5000, 1000];
            let totalMoney = this.getTotalMoneyBetSide(logsBetSide, unit);
            let listCalc = [];

            // Duyet tung chip trong danh sach chip
            for (let i in listChip) {
                let chip = listChip[i];
                // So luong chip tuong ung voi tong tien hien tai
                let countBets = Math.floor(totalMoney / chip);
                // Tinh toan so luong chip con lai tuong ung voi so tien con lai
                totalMoney -= countBets * chip;
                // gan chip vao list
                listCalc.push([chip, countBets]);
            }
            // Lay chip co so luong > 0
            let listLogBet = listCalc.filter(chip => chip[1] !== 0);

            //Chuyen data sang thong tin bet
            let logsBet = [];
            listLogBet.map(chipItem => {
                let countBets = chipItem[1];
                let value = chipItem[0];
                for (let i = 0; i < countBets; i++) {
                    logsBet.push({ value: value, betSide: logsBetSide[0].betSide, sessionID: logsBetSide[0].sessionID });
                }
            }, this);
            return logsBet;
        },
        //Disable button bet lai, bet x2
        disableBetAgain: function (isDisable) {
            this.btnBetAgain.interactable = !isDisable;
        },
        disableBetX2: function (isDisable) {
            this.btnBetX2.interactable = !isDisable;
        },
        //Chay animation win
        playAnimationWin: function (sideWin) {
            sideWin = parseInt(sideWin);
            let nodeWin = null;
            switch (sideWin) {
                case cc.SicBoBetSide.MatMot:
                    nodeWin = this.MatMot;
                    break;
                case cc.SicBoBetSide.MatHai:
                    nodeWin = this.MatHai;
                    break;
                case cc.SicBoBetSide.MatBa:
                    nodeWin = this.MatBa;
                    break;
                case cc.SicBoBetSide.MatBon:
                    nodeWin = this.MatBon;
                    break;
                case cc.SicBoBetSide.MatNam:
                    nodeWin = this.MatNam;
                    break;
                case cc.SicBoBetSide.MatSau:
                    nodeWin = this.MatSau;
                    break;
                case cc.SicBoBetSide.CuaTai:
                    nodeWin = this.CuaTai;
                    break;
                case cc.SicBoBetSide.CuaXiu:
                    nodeWin = this.CuaXiu;
                    break;
                case cc.SicBoBetSide.CuaChan:
                    nodeWin = this.CuaChan;
                    break;
                case cc.SicBoBetSide.CuaLe:
                    nodeWin = this.CuaLe;
                    break;
                case cc.SicBoBetSide.MatMotHai:
                    nodeWin = this.MatMotHai;
                    break;
                case cc.SicBoBetSide.MatMotBa:
                    nodeWin = this.MatMotBa;
                    break;
                case cc.SicBoBetSide.MatMotBon:
                    nodeWin = this.MatMotBon;
                    break;
                case cc.SicBoBetSide.MatMotNam:
                    nodeWin = this.MatMotNam;
                    break;
                case cc.SicBoBetSide.MatMotSau:
                    nodeWin = this.MatMotSau;
                    break;
                case cc.SicBoBetSide.MatHaiBa:
                    nodeWin = this.MatHaiBa;
                    break;
                case cc.SicBoBetSide.MatHaiBon:
                    nodeWin = this.MatHaiBon;
                    break;
                case cc.SicBoBetSide.MatHaiNam:
                    nodeWin = this.MatHaiNam;
                    break;
                case cc.SicBoBetSide.MatHaiSau:
                    nodeWin = this.MatHaiSau;
                    break;
                case cc.SicBoBetSide.MatBaBon:
                    nodeWin = this.MatBaBon;
                    break;
                case cc.SicBoBetSide.MatBaNam:
                    nodeWin = this.MatBaNam;
                    break;
                case cc.SicBoBetSide.MatBaSau:
                    nodeWin = this.MatBaSau;
                    break;
                case cc.SicBoBetSide.MatBonNam:
                    nodeWin = this.MatBonNam;
                    break;
                case cc.SicBoBetSide.MatBonSau:
                    nodeWin = this.MatBonSau;
                    break;
                case cc.SicBoBetSide.MatNamSau:
                    nodeWin = this.MatNamSau;
                    break;
                case cc.SicBoBetSide.TongBon:
                    nodeWin = this.TongBon;
                    break;
                case cc.SicBoBetSide.TongNam:
                    nodeWin = this.TongNam;
                    break;
                case cc.SicBoBetSide.TongSau:
                    nodeWin = this.TongSau;
                    break;
                case cc.SicBoBetSide.TongBay:
                    nodeWin = this.TongBay;
                    break;
                case cc.SicBoBetSide.TongTam:
                    nodeWin = this.TongTam;
                    break;
                case cc.SicBoBetSide.TongChin:
                    nodeWin = this.TongChin;
                    break;
                case cc.SicBoBetSide.TongMuoi:
                    nodeWin = this.TongMuoi;
                    break;
                case cc.SicBoBetSide.TongMuoiMot:
                    nodeWin = this.TongMuoiMot;
                    break;
                case cc.SicBoBetSide.TongMuoiHai:
                    nodeWin = this.TongMuoiHai;
                    break;
                case cc.SicBoBetSide.TongMuoiBa:
                    nodeWin = this.TongMuoiBa;
                    break;
                case cc.SicBoBetSide.TongMuoiBon:
                    nodeWin = this.TongMuoiBon;
                    break;
                case cc.SicBoBetSide.TongMuoiNam:
                    nodeWin = this.TongMuoiNam;
                    break;
                case cc.SicBoBetSide.TongMuoiSau:
                    nodeWin = this.TongMuoiSau;
                    break;
                case cc.SicBoBetSide.TongMuoiBay:
                    nodeWin = this.TongMuoiBay;
                    break;
                case cc.SicBoBetSide.MatMotMot:
                    nodeWin = this.MatMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHai:
                    nodeWin = this.MatHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBa:
                    nodeWin = this.MatBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBon:
                    nodeWin = this.MatBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNam:
                    nodeWin = this.MatNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSau:
                    nodeWin = this.MatSauSau;
                    break;
                case cc.SicBoBetSide.MatMotMotMot:
                    nodeWin = this.MatMotMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHaiHai:
                    nodeWin = this.MatHaiHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBaBa:
                    nodeWin = this.MatBaBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBonBon:
                    nodeWin = this.MatBonBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNamNam:
                    nodeWin = this.MatNamNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSauSau:
                    nodeWin = this.MatSauSauSau;
                    break;
                case cc.SicBoBetSide.BaoBatKy:
                    nodeWin = this.BaoBatKy;
                    break;
            }
            if (nodeWin != null) {
                this.activeNodeWin(nodeWin, true);
            }
        },
        playAnimationXWin: function (sideWin, val) {
            sideWin = parseInt(sideWin);
            let nodeWin = null;
            switch (sideWin) {
                case cc.SicBoBetSide.MatMot:
                    nodeWin = this.MatMot;
                    break;
                case cc.SicBoBetSide.MatHai:
                    nodeWin = this.MatHai;
                    break;
                case cc.SicBoBetSide.MatBa:
                    nodeWin = this.MatBa;
                    break;
                case cc.SicBoBetSide.MatBon:
                    nodeWin = this.MatBon;
                    break;
                case cc.SicBoBetSide.MatNam:
                    nodeWin = this.MatNam;
                    break;
                case cc.SicBoBetSide.MatSau:
                    nodeWin = this.MatSau;
                    break;
                case cc.SicBoBetSide.CuaTai:
                    nodeWin = this.CuaTai;
                    break;
                case cc.SicBoBetSide.CuaXiu:
                    nodeWin = this.CuaXiu;
                    break;
                case cc.SicBoBetSide.CuaChan:
                    nodeWin = this.CuaChan;
                    break;
                case cc.SicBoBetSide.CuaLe:
                    nodeWin = this.CuaLe;
                    break;
                case cc.SicBoBetSide.MatMotHai:
                    nodeWin = this.MatMotHai;
                    break;
                case cc.SicBoBetSide.MatMotBa:
                    nodeWin = this.MatMotBa;
                    break;
                case cc.SicBoBetSide.MatMotBon:
                    nodeWin = this.MatMotBon;
                    break;
                case cc.SicBoBetSide.MatMotNam:
                    nodeWin = this.MatMotNam;
                    break;
                case cc.SicBoBetSide.MatMotSau:
                    nodeWin = this.MatMotSau;
                    break;
                case cc.SicBoBetSide.MatHaiBa:
                    nodeWin = this.MatHaiBa;
                    break;
                case cc.SicBoBetSide.MatHaiBon:
                    nodeWin = this.MatHaiBon;
                    break;
                case cc.SicBoBetSide.MatHaiNam:
                    nodeWin = this.MatHaiNam;
                    break;
                case cc.SicBoBetSide.MatHaiSau:
                    nodeWin = this.MatHaiSau;
                    break;
                case cc.SicBoBetSide.MatBaBon:
                    nodeWin = this.MatBaBon;
                    break;
                case cc.SicBoBetSide.MatBaNam:
                    nodeWin = this.MatBaNam;
                    break;
                case cc.SicBoBetSide.MatBaSau:
                    nodeWin = this.MatBaSau;
                    break;
                case cc.SicBoBetSide.MatBonNam:
                    nodeWin = this.MatBonNam;
                    break;
                case cc.SicBoBetSide.MatBonSau:
                    nodeWin = this.MatBonSau;
                    break;
                case cc.SicBoBetSide.MatNamSau:
                    nodeWin = this.MatNamSau;
                    break;
                case cc.SicBoBetSide.TongBon:
                    nodeWin = this.TongBon;
                    break;
                case cc.SicBoBetSide.TongNam:
                    nodeWin = this.TongNam;
                    break;
                case cc.SicBoBetSide.TongSau:
                    nodeWin = this.TongSau;
                    break;
                case cc.SicBoBetSide.TongBay:
                    nodeWin = this.TongBay;
                    break;
                case cc.SicBoBetSide.TongTam:
                    nodeWin = this.TongTam;
                    break;
                case cc.SicBoBetSide.TongChin:
                    nodeWin = this.TongChin;
                    break;
                case cc.SicBoBetSide.TongMuoi:
                    nodeWin = this.TongMuoi;
                    break;
                case cc.SicBoBetSide.TongMuoiMot:
                    nodeWin = this.TongMuoiMot;
                    break;
                case cc.SicBoBetSide.TongMuoiHai:
                    nodeWin = this.TongMuoiHai;
                    break;
                case cc.SicBoBetSide.TongMuoiBa:
                    nodeWin = this.TongMuoiBa;
                    break;
                case cc.SicBoBetSide.TongMuoiBon:
                    nodeWin = this.TongMuoiBon;
                    break;
                case cc.SicBoBetSide.TongMuoiNam:
                    nodeWin = this.TongMuoiNam;
                    break;
                case cc.SicBoBetSide.TongMuoiSau:
                    nodeWin = this.TongMuoiSau;
                    break;
                case cc.SicBoBetSide.TongMuoiBay:
                    nodeWin = this.TongMuoiBay;
                    break;
                case cc.SicBoBetSide.MatMotMot:
                    nodeWin = this.MatMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHai:
                    nodeWin = this.MatHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBa:
                    nodeWin = this.MatBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBon:
                    nodeWin = this.MatBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNam:
                    nodeWin = this.MatNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSau:
                    nodeWin = this.MatSauSau;
                    break;
                case cc.SicBoBetSide.MatMotMotMot:
                    nodeWin = this.MatMotMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHaiHai:
                    nodeWin = this.MatHaiHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBaBa:
                    nodeWin = this.MatBaBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBonBon:
                    nodeWin = this.MatBonBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNamNam:
                    nodeWin = this.MatNamNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSauSau:
                    nodeWin = this.MatSauSauSau;
                    break;
                case cc.SicBoBetSide.BaoBatKy:
                    nodeWin = this.BaoBatKy;
                    break;
            }
            if (nodeWin != null) {
                this.activeXWin(nodeWin, true, val,sideWin);
            }
        },
        playAnimationCurrentPlayerWin: function (sideWin, val) {
            sideWin = parseInt(sideWin);
            let nodeWin = null;
            switch (sideWin) {
                case cc.SicBoBetSide.MatMot:
                    nodeWin = this.MatMot;
                    break;
                case cc.SicBoBetSide.MatHai:
                    nodeWin = this.MatHai;
                    break;
                case cc.SicBoBetSide.MatBa:
                    nodeWin = this.MatBa;
                    break;
                case cc.SicBoBetSide.MatBon:
                    nodeWin = this.MatBon;
                    break;
                case cc.SicBoBetSide.MatNam:
                    nodeWin = this.MatNam;
                    break;
                case cc.SicBoBetSide.MatSau:
                    nodeWin = this.MatSau;
                    break;
                case cc.SicBoBetSide.CuaTai:
                    nodeWin = this.CuaTai;
                    break;
                case cc.SicBoBetSide.CuaXiu:
                    nodeWin = this.CuaXiu;
                    break;
                case cc.SicBoBetSide.CuaChan:
                    nodeWin = this.CuaChan;
                    break;
                case cc.SicBoBetSide.CuaLe:
                    nodeWin = this.CuaLe;
                    break;
                case cc.SicBoBetSide.MatMotHai:
                    nodeWin = this.MatMotHai;
                    break;
                case cc.SicBoBetSide.MatMotBa:
                    nodeWin = this.MatMotBa;
                    break;
                case cc.SicBoBetSide.MatMotBon:
                    nodeWin = this.MatMotBon;
                    break;
                case cc.SicBoBetSide.MatMotNam:
                    nodeWin = this.MatMotNam;
                    break;
                case cc.SicBoBetSide.MatMotSau:
                    nodeWin = this.MatMotSau;
                    break;
                case cc.SicBoBetSide.MatHaiBa:
                    nodeWin = this.MatHaiBa;
                    break;
                case cc.SicBoBetSide.MatHaiBon:
                    nodeWin = this.MatHaiBon;
                    break;
                case cc.SicBoBetSide.MatHaiNam:
                    nodeWin = this.MatHaiNam;
                    break;
                case cc.SicBoBetSide.MatHaiSau:
                    nodeWin = this.MatHaiSau;
                    break;
                case cc.SicBoBetSide.MatBaBon:
                    nodeWin = this.MatBaBon;
                    break;
                case cc.SicBoBetSide.MatBaNam:
                    nodeWin = this.MatBaNam;
                    break;
                case cc.SicBoBetSide.MatBaSau:
                    nodeWin = this.MatBaSau;
                    break;
                case cc.SicBoBetSide.MatBonNam:
                    nodeWin = this.MatBonNam;
                    break;
                case cc.SicBoBetSide.MatBonSau:
                    nodeWin = this.MatBonSau;
                    break;
                case cc.SicBoBetSide.MatNamSau:
                    nodeWin = this.MatNamSau;
                    break;
                case cc.SicBoBetSide.TongBon:
                    nodeWin = this.TongBon;
                    break;
                case cc.SicBoBetSide.TongNam:
                    nodeWin = this.TongNam;
                    break;
                case cc.SicBoBetSide.TongSau:
                    nodeWin = this.TongSau;
                    break;
                case cc.SicBoBetSide.TongBay:
                    nodeWin = this.TongBay;
                    break;
                case cc.SicBoBetSide.TongTam:
                    nodeWin = this.TongTam;
                    break;
                case cc.SicBoBetSide.TongChin:
                    nodeWin = this.TongChin;
                    break;
                case cc.SicBoBetSide.TongMuoi:
                    nodeWin = this.TongMuoi;
                    break;
                case cc.SicBoBetSide.TongMuoiMot:
                    nodeWin = this.TongMuoiMot;
                    break;
                case cc.SicBoBetSide.TongMuoiHai:
                    nodeWin = this.TongMuoiHai;
                    break;
                case cc.SicBoBetSide.TongMuoiBa:
                    nodeWin = this.TongMuoiBa;
                    break;
                case cc.SicBoBetSide.TongMuoiBon:
                    nodeWin = this.TongMuoiBon;
                    break;
                case cc.SicBoBetSide.TongMuoiNam:
                    nodeWin = this.TongMuoiNam;
                    break;
                case cc.SicBoBetSide.TongMuoiSau:
                    nodeWin = this.TongMuoiSau;
                    break;
                case cc.SicBoBetSide.TongMuoiBay:
                    nodeWin = this.TongMuoiBay;
                    break;
                case cc.SicBoBetSide.MatMotMot:
                    nodeWin = this.MatMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHai:
                    nodeWin = this.MatHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBa:
                    nodeWin = this.MatBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBon:
                    nodeWin = this.MatBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNam:
                    nodeWin = this.MatNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSau:
                    nodeWin = this.MatSauSau;
                    break;
                case cc.SicBoBetSide.MatMotMotMot:
                    nodeWin = this.MatMotMotMot;
                    break;
                case cc.SicBoBetSide.MatHaiHaiHai:
                    nodeWin = this.MatHaiHaiHai;
                    break;
                case cc.SicBoBetSide.MatBaBaBa:
                    nodeWin = this.MatBaBaBa;
                    break;
                case cc.SicBoBetSide.MatBonBonBon:
                    nodeWin = this.MatBonBonBon;
                    break;
                case cc.SicBoBetSide.MatNamNamNam:
                    nodeWin = this.MatNamNamNam;
                    break;
                case cc.SicBoBetSide.MatSauSauSau:
                    nodeWin = this.MatSauSauSau;
                    break;
                case cc.SicBoBetSide.BaoBatKy:
                    nodeWin = this.BaoBatKy;
                    break;
            }
            if (nodeWin != null) {
                this.activeCurrentPlayerWin(nodeWin, true, val);
            }
        },
        //Stop play win
        stopAnimationWin: function () {
            this.listNodeSide.map(node => {
                this.activeNodeWin(node, false);
                this.activeXWin(node, false, 0,0);
                this.activeCurrentPlayerWin(node,false, 0);
            }, this);
            this.resetLbTotalBet();
            this.disableBetX2(true);
        },
        hideAnimationBigWin: function () {
            this.listNodeSide.map(node => {
                this.activeNodeWin(node, false);
                this.activeXWin(node, false, 0,0);
            }, this);
        },
        isShowingBigWin() {
            return this.xWinBigWin.active;
        },
        onBetClick: function (sender, betSide) {
            this.onBet(betSide);
        },
        //onBet dat cua
        onBet: function (betSide) {
            this.disableBetAgain(true);
            this.disableBetX2(false);
            //Gui request bet
            this.sendRequestBet(this.betValue, betSide);
        },
        //Update betValue
        updateTotalUserBetSide: function (betSide, totalBet) {
            betSide = parseInt(betSide);
            let group = this.getLabelTotalBetBySide(betSide);
            group.getChildByName('total_bet_bg').active = true;
            group.getChildByName('total_bet_bg').getChildByName('lbTotalBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(totalBet);
        },
        //HubOn betOfAccount
        updateBetOfAccount: function (data) {
            data.map(betSide => {
                let side = parseInt(betSide.BetSide);
                let group = this.getLabelTotalBetBySide(side);
                group.getChildByName('total_bet_bg').active = true;
                group.getChildByName('total_bet_bg').getChildByName('lbTotalBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(betSide.BetValue);
            });
        },
        getLabelTotalBetBySide: function (betSide) {
            let group = this.TotalBets[betSide-1];
            return group;
        },

        updateTotalBet: function (data) {
            
            if(data.CuaTai!=0){
                this.TotalBets[6].getChildByName('lbTotalUserBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(data.CuaTai);
            }
            if(data.CuaXiu!=0){
                this.TotalBets[7].getChildByName('lbTotalUserBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(data.CuaXiu);
            }
            if(data.CuaChan!=0){
                this.TotalBets[8].getChildByName('lbTotalUserBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(data.CuaChan);
            }
            if(data.CuaLe!=0){
                this.TotalBets[9].getChildByName('lbTotalUserBet').getComponent(cc.Label).string = cc.Tool.getInstance().formatNumberSicbo(data.CuaLe);
            }
            
        },
        setStringValue: function (label, strNum) {
            label.string = strNum === 0 ? "" : cc.Tool.getInstance().formatNumberSicbo(strNum);
        },
        sendRequestBet: function (betValue, betSide) {
            return this.controller.sendRequestOnHub(cc.MethodHubName.BET, betValue, betSide);
        },
        setSpriteBtnNan: function () {
            this.spriteBtnNan.spriteFrame = this.controller.getSfNan(this.getIsNan());
        },
        onNanClick: function () {
            this.controller.setIsNan(!this.getIsNan());
            this.setSpriteBtnNan();
        },
        getIsNan: function () {
            return this.controller.getIsNan();

        }

    });
}).call(this);
