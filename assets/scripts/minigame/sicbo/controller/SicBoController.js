/*
 * Generated by BeChicken
 * on 11/13/2019
 * version v1.0
 */
(function () {
    var SicBoController;
    SicBoController = (function () {
        var instance;

        function SicBoController() {

        }

        instance = void 0;

        SicBoController.getInstance = function () {
            if (instance === void 0) {
                instance = this;
            }
            return instance.prototype;
        };
        //SicBoPopupView
        SicBoController.prototype.setPopUpView = function (view) {
            return this.SicBoPopupView = view;
        };
        //SHow popup BigWin
        SicBoController.prototype.showBigWin = function (xWin) {
            return this.SicBoPopupView.showBigWin(xWin);
        };
        //SHow popup BigWin
        SicBoController.prototype.showPlayerLeave = function () {
            return this.SicBoPopupView.showPlayerLeave();
        };
        //SicBoView

        // Cap nhat game theo HubOn
        SicBoController.prototype.setSicBoView = function (view) {
            return this.SicBoView = view;
        };
        SicBoController.prototype.enableChat = function (data) {
            return this.SicBoView.enableChat(data);
        };
        SicBoController.prototype.sendRequestOnHub = function (method, data1, data2) {
            if (this.SicBoView)
                return this.SicBoView.sendRequestOnHub(method, data1, data2);
        };
        //SicBoChipView
        SicBoController.prototype.setSicBoChipView = function (view) {
            return this.SicBoChipView = view;
        };
        SicBoController.prototype.pushCoinThiemThu = function (betSide) {
            return this.SicBoChipViewpushCoinThiemThu(betSide);
        };
        //Cap nhat so du cua nguoi choi
        SicBoController.prototype.updateBalance = function (balance) {
            this.SicBoView.updateBalance(balance)
        };
        //HUB ON NAME
        SicBoController.prototype.setInfoView = function (infoView) {
            return this.SicBo_InfoView = infoView;
        };
        //playerLeave
        SicBoController.prototype.playerLeave = function (info) {
            this.SicBoView.playerLeave(info);
            this.SicBo_InfoView.playerLeave(info);
        };
        SicBoController.prototype.joinGame = function (info) {
            this.SicBo_InfoView.joinGame(info);
        };
        //HubOn updateSessionInfo
        SicBoController.prototype.updateSessionInfo = function (data) {
            return this.SicBo_InfoView.updateSessionInfo(data);
        };
        //HubOn summaryPlayer
        SicBoController.prototype.updatePlayersInGame = function (data) {
            return this.SicBo_InfoView.updatePlayersInGame(data);
        };

        //HubOn showResult
        SicBoController.prototype.winResult = function (result) {
            return this.SicBo_InfoView.winResult(result);
        };
        SicBoController.prototype.setWinResult = function (result) {
            return this.winResultResponse = result;
        };
        SicBoController.prototype.getWinResult = function () {
            return this.winResultResponse;
        };
        SicBoController.prototype.setWinVipResult = function (result) {
            return this.winVipResultResponse = result;
        };
        SicBoController.prototype.getWinVipResult = function () {
            return this.winVipResultResponse;
        };
        SicBoController.prototype.setTotalWinResult = function (result) {
            return this.totalWinResultResponse = result;
        };
        SicBoController.prototype.getTotalWinResult = function () {
            return this.totalWinResultResponse;
        };
        //HubOn winResultVip
        SicBoController.prototype.winResultVip = function (result) {
            return this.SicBo_InfoView.winResultVip(result);
        };
        SicBoController.prototype.updateTotalUserWin = function (amount) {
            return this.SicBo_InfoView.updateTotalUserWin(amount);
        };


        //Hien thi message chat
        SicBoController.prototype.playerShowBubbleChat = function (message) {
            return this.SicBo_InfoView.playerShowBubbleChat(message);
        };

        //Cap nhat thong tin player
        SicBoController.prototype.updatePlayersUI = function (data) {
            return this.SicBo_InfoView.updatePlayersUI(data);
        };
        //play dealer anim
        SicBoController.prototype.playDealerAnimXWin = function () {
            return this.SicBo_InfoView.playDealerAnimXWin();
        };
        //Cap nhat thong tin nguoi choi hien tai
        SicBoController.prototype.updatePlayerInfor = function (data) {
            return this.SicBo_InfoView.updatePlayerInfor(data);
        };

        //Cap nhat balance
        SicBoController.prototype.updateBalanceCurrPlayer = function (balance) {
            return this.SicBo_InfoView.updateBalanceCurrPlayer(balance);
        };
        //Cap nhat balance cua player khac
        SicBoController.prototype.updateBalancePlayer = function (data) {
            return this.SicBo_InfoView.updateBalancePlayer(data);
        };
        //Cap nhat thoi gian
        SicBoController.prototype.updateRoomTimer = function (time) {
            return this.SicBo_InfoView.updateRoomTimer(time);
        };

        //HubOn onNotifyChangePhrase
        SicBoController.prototype.onNotifyChangePhrase = function (data) {
            return this.SicBo_InfoView.onNotifyChangePhrase(data);
        };
        //Cap nhat position Player
        SicBoController.prototype.updatePositionPlayerUI = function (positions) {
            return this.positionsUI = positions;
        };
        SicBoController.prototype.positionPlayerUI = function () {
            return this.positionsUI;
        };

        //Assets
        SicBoController.prototype.setAssetView = function (assetsView) {
            return this.SicBo_AssetsView = assetsView;
        };

        SicBoController.prototype.getAssetView = function () {
            return this.SicBo_AssetsView;
        };

        SicBoController.prototype.createChip = function (type) {
            return this.SicBo_AssetsView.createChip(type);
        };

        SicBoController.prototype.getSfNan = function (isNan) {
            return this.SicBo_AssetsView.getSfNan(isNan);
        };

        SicBoController.prototype.getSfDice = function (index) {
            return this.SicBo_AssetsView.getSfDice(index);
        };

        SicBoController.prototype.getSfDice2D = function (index) {
            return this.SicBo_AssetsView.getSfDice2D(index);
        };
        SicBoController.prototype.getSfXRes = function (index) {
            return this.SicBo_AssetsView.getSfXRes(index);
        };
        //Lay mau timer
        SicBoController.prototype.getColorType = function (type) {
            return this.SicBo_AssetsView.getColorType(type);
        };
        //Luu chip vao pool
        SicBoController.prototype.putChipToPool = function (nodeChip, betValue) {
            return this.SicBo_AssetsView.putChipToPool(nodeChip, betValue);
        };
        //Clear pools
        SicBoController.prototype.clearPools = function () {
            return this.SicBo_AssetsView.clearPools();
        };

        //ResultView
        SicBoController.prototype.setResultView = function (resultView) {
            this.resultView = resultView;
        };
        SicBoController.prototype.onShowResult = function (result) {
            return this.resultView.onShowResult(result);
        };
        // SicBoController.prototype.onShowLastResult = function (data=null) {
        //     return this.resultView.onShowLastResult(data);
        // };
        SicBoController.prototype.setDicesResult = function (result) {
            return this.resultView.setDicesResult(result);
        };
        SicBoController.prototype.updateThemThuResult = function (result) {
            return this.resultView.updateThemThuResult(result);
        };
        SicBoController.prototype.getTuImage = function () {
            return this.resultView.getTuImage();
        };
        //BetView
        SicBoController.prototype.setBetView = function (betView) {
            return this.SicBo_BetView = betView;
        };
        SicBoController.prototype.onBet = function (betSide) {
            return this.SicBo_BetView.onBet(betSide);
        };

        //Enable cac cua bet
        SicBoController.prototype.enableClickBet = function (enable) {
            return this.SicBo_BetView.enableClickBet(enable);
        };

        //Disable button bet lai
        SicBoController.prototype.disableBetAgain = function (isDisable) {
            return this.SicBo_BetView.disableBetAgain(isDisable);
        };
        //Hien thi hieu ung thang cua cua bet
        SicBoController.prototype.playAnimationWin = function (sideWin) {
            return this.SicBo_BetView.playAnimationWin(sideWin);
        };
        SicBoController.prototype.playAnimationXWin = function (sideWin, val) {
            return this.SicBo_BetView.playAnimationXWin(sideWin, val);
        };
        SicBoController.prototype.playAnimationCurrentPlayerWin = function (sideWin, val) {
            return this.SicBo_BetView.playAnimationCurrentPlayerWin(sideWin, val);
        };
        //Stop hien thi hieu ung thang
        SicBoController.prototype.stopAnimationWin = function () {
            return this.SicBo_BetView.stopAnimationWin();
        };
        //An hieu ung thang
        SicBoController.prototype.hideAnimationBigWin = function () {
            return this.SicBo_BetView.hideAnimationBigWin();
        };
        //is showing big win
        SicBoController.prototype.isShowingBigWin = function () {
            return this.SicBo_BetView.isShowingBigWin();
        };
        //Cap nhat tong tien bet player
        SicBoController.prototype.updateTotalUserBetSide = function (betSide, total) {
            return this.SicBo_BetView.updateTotalUserBetSide(betSide, total);
        };
        SicBoController.prototype.updateTotalBet = function (data) {
            return this.SicBo_BetView.updateTotalBet(data);
        };
        //UpdateBetOfAccount
        SicBoController.prototype.updateBetOfAccount = function (data) {
            return this.SicBo_BetView.updateBetOfAccount(data);
        };

        //ChipView
        SicBoController.prototype.setChipsView = function (chipsView) {
            return this.SicBo_ChipsView = chipsView;
        };
        SicBoController.prototype.pushCoinThiemThu = function (betSide) {
            return this.SicBo_ChipsView.pushCoinThiemThu(betSide);
        };
        //Di chuyen chip
        SicBoController.prototype.moveChipBet = function (betValue, betSide, type, accID) {
            return this.SicBo_ChipsView.moveChipBet(betValue, betSide, type, accID);
        };

        //Lay lai chip thua
        SicBoController.prototype.getChipsLose = function (sideLose) {
            return this.SicBo_ChipsView.getChipsLose(sideLose);
        };
        //Tra chip thang
        SicBoController.prototype.refundChips = function (sideWin) {
            return this.SicBo_ChipsView.refundChips(sideWin);
        };

        //ClearAllChip
        SicBoController.prototype.clearAllChips = function () {
            return this.SicBo_ChipsView.clearAllChips();
        };

        //Khoi tao lai param chip
        SicBoController.prototype.initParamChips = function () {
            return this.SicBo_ChipsView.initParamChips();
        };

        //Update chip khi vao game
        SicBoController.prototype.updateChipForBetSession = function (data) {
            return this.SicBo_ChipsView.updateChipForBetSession(data);
        };

        SicBoController.prototype.clearBetLog = function (sessionID) {
            this.betLog = this.betLog.filter(log => log.sessionID > (sessionID - 1));
        };
        SicBoController.prototype.getBetLogBySessionID = function (sessionID) {
            return this.betLog.filter(log => log.sessionID == sessionID);
        };
        //Set betBlog
        SicBoController.prototype.setBetLog = function (betInfo) {
            return this.betLog.push(betInfo);
        };
        //Lay thong tin betLog
        SicBoController.prototype.getBetLog = function () {
            return this.betLog;
        };
        //Khoi tao/ reset betLog
        SicBoController.prototype.initBetLog = function () {
            return this.betLog = [];
        };

        //Set betBlog
        SicBoController.prototype.setChipWin = function (chip, chipType, positionEnd) {
            return this.chipsWin.push([chip, chipType, positionEnd]);
        };
        //Lay thong tin chipWin
        SicBoController.prototype.getChipsWin = function () {
            return this.chipsWin;
        };
        //Khoi tao/ reset chipWin
        SicBoController.prototype.initChipsWin = function () {
            return this.chipsWin = [];
          
        };
        //set chat view
        SicBoController.prototype.setChatView = function (view) {
            return this.ChatView = view;
        };
        SicBoController.prototype.insertChat = function (data) {
            return this.ChatView.insertChat(data);
        };
        SicBoController.prototype.sendChat = function (message) {
            if (this.SicBoView)
                return this.SicBoView.sendRequestOnHub(cc.MethodHubName.SEND_MESSAGE, message);
        };
        //Set betBlogSession
        SicBoController.prototype.setBetLogSession = function (sessionId) {
            return this.betLogSession = sessionId;
        };
        //Lay thong tin betLogSession
        SicBoController.prototype.getBetLogSession = function () {
            return this.betLogSession;
        };

        //Set CurrentState
        SicBoController.prototype.setCurrentState = function (state) {
            return this.currentState = state;
        };
        //Get CurrentState
        SicBoController.prototype.getCurrentState = function () {
            return this.currentState;
        };

        //Set Nan
        SicBoController.prototype.setIsNan = function (isNan) {
            return this.isNan = isNan;
        };
        //Get Nan
        SicBoController.prototype.getIsNan = function () {
            return this.isNan;
        };

        SicBoController.prototype.setAccountTop = function (data) {
            return this.accountTop = data;
        };
        SicBoController.prototype.getAccountTop = function () {
            return this.accountTop;
        };
        return SicBoController;


    })();
    cc.SicBoController = SicBoController;
}).call(this);