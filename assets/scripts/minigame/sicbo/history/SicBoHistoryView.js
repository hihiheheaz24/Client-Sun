/*
 * Generated by BeChicken
 * on 11/14/2019
 * version v1.0
 */
(function () {
    cc.SicBoHistoryView = cc.Class({
        "extends": cc.PopupBase,
        properties: {
            contentLeft:cc.Node,
            contentRight:cc.Node,
            itemTemp: cc.Node,
            sessionIDLabel:cc.Label,
            MD5Label:cc.Label,
            KeyResultLabel:cc.Label,
            KeyRandomLabel:cc.Label,
            dice1Sprite:cc.Sprite,
            dice2Sprite:cc.Sprite,
            dice3Sprite:cc.Sprite,
            diceSpriteFrame:[cc.SpriteFrame],
            resultLabel:cc.Label,
            PageNumberLabel:cc.Label,
            btnBack:cc.Node,
            btnNext:cc.Node,
            resultNode:cc.Node
        },

        onLoad: function () {
            this.animation = this.node.getComponent(cc.Animation);
            this.node.zIndex = cc.NoteDepth.POPUP_TAIXIU;
        },

        onEnable: function () {
            var self = this;
            var delay = 0.2;
            cc.director.getScheduler().schedule(function () {
                self.getHistory();
            }, this, 1, 0, delay, false);

            this.animation.play('openPopup');
        },

        getHistory: function () {
            var getHistoryCommand = new cc.SicBoHistoryCommand;
            getHistoryCommand.execute(this);
        },

        onGetHistoryResponse: function (data) {
            this.dataCache = data;
            this.renderPage(data,1);
        },
        nextPage:function()
        {
            this.currentPage=this.currentPage-1;
            this.renderPage(this.dataCache,this.currentPage);
        },
        backPage:function()
        {
            this.currentPage=this.currentPage+1;
            this.renderPage(this.dataCache,this.currentPage);
        },
        renderPage:function(listdata,pageNumber)
        {
            if(pageNumber>listdata.length||pageNumber<1) return;
            this.btnBack.active = true;
            this.btnNext.active = true;
            if (pageNumber==listdata.length) {
                this.btnBack.active = false;
            }
            if (pageNumber==1) {
                this.btnNext.active = false;
            }
            this.clearListView();
            let data = listdata[pageNumber-1];
            this.PageNumberLabel.string = (pageNumber)+ "/"+listdata.length;
            this.sessionIDLabel.string = "#" + data.SessionID+" ("+data.CreateTimeFm+")";
            this.currentMd5 = data.MD5;
            this.currentKeyResult = data.KeyResult;
            this.MD5Label.string = data.MD5;
            let arrayKey = data.KeyResult.split("|");
            this.KeyResultLabel.string = arrayKey[0];
            this.KeyRandomLabel.string = arrayKey[1];
            this.renderResult(data.Dice1, data.Dice2, data.Dice3);
            this.renderBetGate(data.BetGates);
            this.currentPage = pageNumber;
        },
        renderBetGate:function(data){
            for (let index = 0; index < data.length; index++) {
                let newItem = cc.instantiate(this.itemTemp);
                let isActiveBg = (index/2)%2==1?true:false;
                newItem.getComponent(cc.SicBoHistoryItem).updateItem(data[index],isActiveBg);
                newItem.parent = index%2==0?this.contentLeft:this.contentRight;
            }
        },
        renderResult:function(dice1,dice2,dice3)
        {
            this.dice1Sprite.spriteFrame = this.diceSpriteFrame[dice1-1];
            this.dice2Sprite.spriteFrame = this.diceSpriteFrame[dice2-1];
            this.dice3Sprite.spriteFrame = this.diceSpriteFrame[dice3-1];
            let str = "";
            let diceSum = dice1 + dice2 + dice3;
            str = diceSum>10?"TÀI":"XỈU";
            if (dice1==dice2&&dice2==dice3) {
                str = "BÃO";
            }
            this.resultLabel.string = diceSum+" / "+str;
            this.resultNode.active = true;
        },
        closeClicked: function () {
            this.animation.play('closePopup');
            var self = this;
            var delay = 0.12;
            cc.AudioController.getInstance().playSound(cc.AudioTypes.SICBO_CLOSE_POPUP);
            cc.director.getScheduler().schedule(function () {
                self.animation.stop();
                cc.SicBoPopupController.getInstance().destroyHistoryView();
            }, this, 1, 0, delay, false);
        },
        clearListView:function()
        {
            for (let index = 0; index < this.contentLeft.children.length; index++) {
                this.contentLeft.children[index].destroy();
            }
            for (let index = 0; index < this.contentRight.children.length; index++) {
                this.contentRight.children[index].destroy();
            }
            this.resultNode.active = false;
        },
        copyMd5:function()
        {
            cc.Tool.getInstance().copyToClipboard(this.currentMd5);
        },
        copyKey:function()
        {
            cc.Tool.getInstance().copyToClipboard(this.currentKeyResult);

        }
    });
}).call(this);