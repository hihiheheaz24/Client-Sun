/*
 * Generated by BeChicken
 * on 6/10/2019
 * version v1.0
 */
(function () {
    cc.DragonTigerResultEffectView = cc.Class({
        "extends": cc.Component,
        properties: { 
            btnNodeRong: cc.Node,
            btnNodeHoa: cc.Node,
            btnNodeHo: cc.Node,
            nodeRong: cc.Node,
            nodeHo: cc.Node,
            nodeHoa: cc.Node,
            btnRongSprite: cc.Sprite,
            btnHoSprite: cc.Sprite,
            btnHoaSprite: cc.Sprite,

            rongSpriteNormal: cc.SpriteFrame,
            hoSpriteNormal: cc.SpriteFrame,
            hoaSpriteNormal: cc.SpriteFrame,

        },

        onLoad: function () {
            //setView
            cc.DragonTigerController.getInstance().setDragonTigerResultEffectView(this);

             //Node win cac cua dat
             this.rongWin = this.nodeRong.getChildByName('win');
             this.hoWin = this.nodeHo.getChildByName('win');
             this.hoaWin = this.nodeHoa.getChildByName('win');

             this.rongFW = this.nodeRong.getChildByName('firework');
             this.hoFW = this.nodeHo.getChildByName('firework');
             this.hoaFW = this.nodeHoa.getChildByName('firework');

             this.rongTitle = this.nodeRong.getChildByName('title');
             this.hoTitle = this.nodeHo.getChildByName('title');
             this.hoaTitle = this.nodeHoa.getChildByName('title');

             this.rongBGMain = this.nodeRong.getChildByName('bgWin');
             this.hoBGMain = this.nodeHo.getChildByName('bgWin');
             this.hoaBGMain = this.nodeHoa.getChildByName('bgWin');


        },

        onDestroy: function () {
            cc.DragonTigerController.getInstance().setDragonTigerResultEffectView(null);
        },
        stopEffect: function () {
            this.reset();
        },
        reset: function () {
            this.rongWin.stopAllActions();
            this.rongWin.active = false;
            this.rongFW.active = false;
            this.rongFW.getComponent(cc.Animation).stop();
            this.rongTitle.active = false;
            this.rongBGMain.active = false;
            this.rongBGMain.stopAllActions();

            this.hoWin.stopAllActions();
            this.hoWin.active = false;
            this.hoFW.active = false;
            this.hoFW.getComponent(cc.Animation).stop();
            this.hoTitle.active = false;
            this.hoBGMain.active = false;
            this.hoBGMain.stopAllActions();

            this.hoaWin.stopAllActions();
            this.hoaWin.active = false;
            this.hoaFW.active = false;
            this.hoaFW.getComponent(cc.Animation).stop();
            this.hoaTitle.active = false;
            this.hoaBGMain.active = false;
            this.hoaBGMain.stopAllActions();
        },

        playEffectWin: function (sideWin) {
            let dragonTigerShowCard = cc.DragonTigerController.getInstance().dragonTigerShowCard;
            //this.reset();

            sideWin = parseInt(sideWin);
            let nodeWin = null;
            let nodeFirework = null;
            let nodeTitle = null;
            let nodeBGMain = null;
            switch (sideWin) {
                case cc.DragonTigerBetSide.RONG:
                    nodeWin = this.rongWin;
                    nodeFirework = this.rongFW;
                    nodeTitle = this.rongTitle;
                    nodeBGMain = this.rongBGMain;
                    dragonTigerShowCard.playAnimation(cc.DragonTigerBetSide.RONG);
                    this.btnNodeRong.opacity = 255;
                    break;
                case cc.DragonTigerBetSide.HOA:
                    nodeWin = this.hoaWin;
                    nodeFirework = this.hoaFW;
                    nodeTitle = this.hoaTitle;
                    nodeBGMain = this.hoaBGMain;
                    dragonTigerShowCard.playAnimation(cc.DragonTigerBetSide.HOA);
                    this.btnNodeHoa.opacity = 255;
                   
                    break;
                case cc.DragonTigerBetSide.HO:
                    nodeWin = this.hoWin;
                    nodeFirework = this.hoFW;
                    nodeTitle = this.hoTitle;
                    nodeBGMain = this.hoBGMain;
                    dragonTigerShowCard.playAnimation(cc.DragonTigerBetSide.HO);
                    this.btnNodeHo.opacity = 255; 
                    break;
            }
 
         
            if (nodeWin != null) {
                nodeWin.active = true;
                nodeWin.stopAllActions();
                nodeWin.runAction(cc.sequence(
                    cc.fadeOut(0.2),
                    cc.fadeIn(0.2),
                    cc.fadeOut(0.2),
                    cc.fadeIn(0.2),
                    cc.fadeOut(0.2),
                    cc.fadeIn(0.2),
                    cc.fadeOut(0.2),
                    cc.fadeIn(0.2),
                ));
               
            }
            if (nodeFirework != null) {
                nodeFirework.active = true;
                nodeFirework.getComponent(cc.Animation).play();
            }

            if (nodeTitle != null) {
                nodeTitle.active = true;
            }

            if (nodeBGMain != null) {
                nodeBGMain.active = true;
                nodeBGMain.stopAllActions();
                nodeBGMain.scale = 1;
                nodeBGMain.runAction(cc.sequence(
                    cc.scaleTo(0.3, 1.1),
                    cc.scaleTo(0.3, 1),
                    cc.scaleTo(0.3, 1.1),
                    cc.scaleTo(0.3, 1),
                ));
            }   
            
            this.btnRongSprite.spriteFrame = this.rongSpriteNormal;
            this.btnHoSprite.spriteFrame = this.hoSpriteNormal;
            this.btnHoaSprite.spriteFrame = this.hoaSpriteNormal;
        }
    });
}).call(this);