/*
 * Generated by BeChicken
 * on 9/27/2019
 * version v1.0
 */
cc.Class({
    extends: cc.Component,
    properties: {
        layoutSoiCau: cc.Node,
        nodeResultTai: cc.Prefab,
        nodeResultXiu: cc.Prefab,
        nodeResultHoa: cc.Prefab,
        spfBar: cc.SpriteFrame,
        spfG777: cc.SpriteFrame,
        spfChuong: cc.SpriteFrame,
        spfChanh: cc.SpriteFrame,
        spfCherry: cc.SpriteFrame,
        spfCam: cc.SpriteFrame,
        spfDuaHau: cc.SpriteFrame,
        spfSao: cc.SpriteFrame,
        spfJackpot: cc.SpriteFrame,
    },
    onLoad: function () {
        cc.Xeng777Controller.getInstance().setSoiCauView(this);
        this.isActive = false;
        // this.itemPool = new cc.NodePool();
        // for (let i = 0; i < 100; i++) {
        //     this.itemPool.put(cc.instantiate(this.itemTemplate));
        // }
        // this.layoutParent.width = 380;
        this.clearList();
        //this.node.active = false;
    },
    activeGraph: function (isActive) {
        this.node.active = isActive;
        this.isActive = isActive;
    },
    initListSoiCau: function (data) {
        console.log(data);
        if (data.length === 0) {
            return;
        }

        if (!this.layoutSoiCau.children.length) {
            for (let i = 16; i >= 0; i--) {
                let diceResult = data[i];
                //let sum = diceResult.FirstDice + diceResult.SecondDice + diceResult.ThirdDice;
                const resultTaiXiu = diceResult.FourDice;
                const resultValue = diceResult.ThirdDice;

                if (resultTaiXiu >= 1 && resultTaiXiu <= 6) {
                    let prefab = cc.instantiate(this.nodeResultXiu);
                    this.setIcon(prefab, resultValue);
                    this.layoutSoiCau.addChild(prefab);
                } else if (resultTaiXiu >= 8 && resultTaiXiu <= 13) {
                    let prefab = cc.instantiate(this.nodeResultTai);
                    this.setIcon(prefab, resultValue);
                    this.layoutSoiCau.addChild(prefab);
                } else {
                    let prefab = cc.instantiate(this.nodeResultHoa);
                    this.setIcon(prefab, resultValue);
                    this.layoutSoiCau.addChild(prefab);
                }
            }
        } else {
            this.layoutSoiCau.children[0].removeFromParent();

            // let diceResult = data[0];
            // let sum = diceResult.FirstDice + diceResult.SecondDice + diceResult.ThirdDice;
            // let prefab = null;
            // let item = null;
            // if (diceResult.FirstDice == diceResult.SecondDice && diceResult.FirstDice == diceResult.ThirdDice) {
            //     item = this.itemYellow;
            // } else
            //     if (sum > 10) {
            //         item = this.itemRed;
            //     } else {
            //         item = this.itemBlue;
            //     }


            // this.layoutParent.children[9].children[0].active = false;
            // prefab = cc.instantiate(item);

            // prefab.children[0].active = true;
            // this.layoutParent.addChild(prefab);

            let diceResult = data[0];
            //let sum = diceResult.FirstDice + diceResult.SecondDice + diceResult.ThirdDice;
            const resultTaiXiu = diceResult.FourDice;
            const resultValue = diceResult.ThirdDice;
            let prefab = null;

            if (resultTaiXiu >= 1 && resultTaiXiu <= 6) {
                prefab = cc.instantiate(this.nodeResultXiu);
                this.setIcon(prefab, resultValue);
                this.layoutSoiCau.addChild(prefab);
            } else if (resultTaiXiu >= 8 && resultTaiXiu <= 13) {
                prefab = cc.instantiate(this.nodeResultTai);
                this.setIcon(prefab, resultValue);
                this.layoutSoiCau.addChild(prefab);
            } else {
                prefab = cc.instantiate(this.nodeResultHoa);
                this.setIcon(prefab, resultValue);
                this.layoutSoiCau.addChild(prefab);
            }

            cc.tween(prefab)
                .to(0, { position: cc.v2(prefab.x - 45, 45), scale: 3 })
                .to(.3, { position: cc.v2(0, 0), scale: 1 })
                .start();
        }


        // this.layoutParent.children[10].children[0].active = true;

        // cc.director.getScheduler().schedule(function () {

        //     cc.tween(this.layoutParent.children[10].children[0])
        //         .by(.2, { opacity: 1 })
        //         .repeatForever()
        //         .start();
        // }, this, 0, 0, 0.4, false);

        // let lastDice = data[0];

        // let diceSum = lastDice.FirstDice + lastDice.SecondDice + lastDice.ThirdDice;

        // this.lbResult.string = diceSum + " / " + (diceSum > 10 ? "TÀI" : "XỈU");

        // this.fakeDice1.spriteFrame = this.spDices[lastDice.FirstDice - 1];
        // this.fakeDice2.spriteFrame = this.spDices[lastDice.SecondDice - 1];
        // this.fakeDice3.spriteFrame = this.spDices[lastDice.ThirdDice - 1];

        // this.fakeDice1.node.active = true;
        // this.fakeDice2.node.active = true;
        // this.fakeDice3.node.active = true;

        // cc.tween(this.fakeDice1.node)
        //     .to(0, { position: cc.v2(this.fakeDice1.x, 120), scale: 1.3 })
        //     .to(.3, { position: cc.v2(this.fakeDice1.y, 0), scale: 1 })
        //     .to(0.2, { scale: 1.3 })
        //     .to(0.2, { scale: 1 })
        //     .start();
        // cc.tween(this.fakeDice2.node)
        //     .to(0.15, { position: cc.v2(this.fakeDice2.x, 120), scale: 1.3 })
        //     .to(.2, { position: cc.v2(this.fakeDice2.y, 0), scale: 1 })
        //     .to(0.2, { scale: 1.3 })
        //     .to(0.2, { scale: 1 })
        //     .start();
        // cc.tween(this.fakeDice3.node)
        //     .to(0.3, { position: cc.v2(this.fakeDice3.x, 120), scale: 1.3 })
        //     .to(.3, { position: cc.v2(this.fakeDice3.y, 0), scale: 1 })
        //     .to(0.2, { scale: 1.3 })
        //     .to(0.2, { scale: 1 })
        //     .start();


        // cc.director.getScheduler().schedule(function () {
        //     this.fakeDice1.node.position = cc.v2(this.fakeDice1.x, 120);
        //     this.fakeDice2.node.position = cc.v2(this.fakeDice2.x, 120);
        //     this.fakeDice3.node.position = cc.v2(this.fakeDice3.x, 120);

        //     this.fakeDice1.node.active = false;
        //     this.fakeDice2.node.active = false;
        //     this.fakeDice3.node.active = false;

        // }, this, 0, 0, 1, false);

        // this.dice1.spriteFrame = this.spDices[lastDice.FirstDice - 1];
        // this.dice2.spriteFrame = this.spDices[lastDice.SecondDice - 1];
        // this.dice3.spriteFrame = this.spDices[lastDice.ThirdDice - 1];
    },

    setIcon: function (prefabResult, value) {
        const spIconResult = prefabResult.getChildByName('result');

        switch (value) {
            case 4:
            case 5:
            case 6:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfBar;
                return 2; //bar
            case 16:
            case 17:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfG777;
                return 3; //77
            case 1:
            case 3:
            case 15:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfChuong;
                return 4; //chuong
            case 8:
            case 19:
            case 20:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfChanh;
                return 5; //chanh
            case 7:
            case 12:
            case 18:
            case 24:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfCherry;
                return 6; //dao
            case 2:
            case 13:
            case 14:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfCam;
                return 7; //cam
            case 9:
            case 10:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfDuaHau;
                return 8; //dua hau
            case 21:
            case 22:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfSao;
                return 9; //sao
            case 23:
                spIconResult.getComponent(cc.Sprite).spriteFrame = this.spfJackpot;
                return 10; //sao
        }
    },

    clearList: function () {
        this.layoutSoiCau.removeAllChildren(true);
    },
});